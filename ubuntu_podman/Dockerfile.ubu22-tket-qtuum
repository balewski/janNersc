FROM ubuntu:22.04
# TKET + Qiskit +Jupyter+Quantinnum
# instruction  https://github.com/CQCL/tket
# use-case instruction is at the bottom

# time python3 -c 'import qiskit'

# time podman build -f Dockerfile.ubu22-tket-qtuum -t balewski/ubu22-tket-qtuum:p4   .

# docker run -it balewski/ubu20-tket:v1   /bin/bash

#   
#         docker exec -it 07d15850b9c2 bash
#         docker login
#         docker ps -a
#         docker commit -m "ubuntu20 TKET+QTuum" -a "Jan Balewski" a7xx balewski/xxx:d
#         time docker push  balewski/ubu20-tket-qtuum:v1
#   at NERSC Image was pulled w/ command:   shifterimg pull balewski/ubu20-tket-qtuum:v1

# is needed by   one of libs 
ARG DEBIAN_FRONTEND=noninteractive
ENV TZ=America/Los_Angeles

RUN echo 1-AAAAAAAAAAAAAAAAAAAAAAAAAAAAA  OS update   && \
    apt-get update && \
    apt-get install -y  locales autoconf automake gcc g++ make vim wget  ssh  openssh-server sudo   git emacs aptitude build-essential xterm python3-pip   python3-tk python3-scipy python3-dev iputils-ping net-tools screen  graphviz  graphviz-dev feh hdf5-tools  x11-apps && \
    apt-get clean all
# python3-bitstring

# notes: python3-tk instals TK for matplotlib to display graphic on Cori
RUN echo 2a-AAAAAAAAAAAAAAAAAAAAAAAAAAAAA   python libs  && \
    pip3 install  --upgrade Pillow    
# notes: Pillow is needed by matplotlib backend 'TkAgg' 

RUN echo 2b-AAAAAAAAAAAAAAAAAAAAAAAAAAAAA  generic  python libs  && \
    pip3 install --upgrade pip && \
    pip3 install matplotlib h5py ruamel.yaml  scipy   jupyter notebook  scikit-learn

# note, pytket will install almost complete qiskit because I call : pytket-qiskit
RUN echo 2c-AAAAAAAAAAAAAAAAAAAAAAAAAAAAA   project specific python libs  && \
    pip3 install  pytket pytket-qiskit qiskit-experiments  fastaparser \
        kaleidoscope mapomatic  pylatexenc networkx[default,extra] graphviz pyzx  \
        pytket-quantinuum   keyring  dbus-python pyjwt requests websockets nest_asyncio   #<== for Quantinuum

RUN echo 2d-AAAAAAAAAAAAAAAAAAAAAAAAAAAAA install keyrings.cryptfile for Quantinuum  && \
    cd /usr/share  && \
    git clone https://github.com/frispete/keyrings.cryptfile && \
    cd keyrings.cryptfile &&\
    pip3 install -e .

RUN    echo 2e-AAAAAAAAAAAAAAAAAAAAAAAAAAAAA   fix numpy   && \
    pip3 uninstall   -y numpy 
RUN   pip3 install   --force-reinstall numpy==1.23.4 bitstring==4.0.1


#to avoid:  partially initialized module 'qiskit' has no attribute '_accelerate'	
RUN echo 2f-AAAAAAAAAAAAAAAAAAAAAAAAAAAAA  more qiskit  && \
    pip3 install qiskit --upgrade  && \
    pip3 install qiskit-terra  --upgrade && \
    pip3 install qiskit-ibm-runtime --upgrade
    
#     pip3 install qiskit-ibm-provider 
     
#RUN    pip3 uninstall -y qiskit-ibmq-provider
RUN   pip3 install qermit qiskit-terra[qasm3-import]

    
ADD docker-entrypoint.sh /srv/docker-entrypoint.sh
RUN  echo 6-AAAAAAAAAA ENTRYPOINT  && chmod a+x /srv/docker-entrypoint.sh
ENTRYPOINT ["/srv/docker-entrypoint.sh"]

# User instruction
#  podman init  as rootful:   podman machine init --memory  20480 --cpus 5 --disk-size 2048  --rootful
# start image with current user - see: docker_volumes/qcrank_wrk/qiskit_examples/laptop_balewski_podman.source
 
RUN  pip3  install qiskit-ionq   
RUN pip3 install --upgrade qiskit-aer


FROM ubuntu:24.04
# qiskit1.2 + QML + IonQ +Braket + pytorch+PennyLane_0.35 +  qbraid + LatexLive

# time podman build -f Dockerfile.ubu24-qiskit -t balewski/ubu24-qiskit:p3e  .
# PM: real      7m42.406s

# podman commit  -a "Jan Balewski"  c3d48cf15876XXX  balewski/XXXkit-qml:p2ch
# on laptop:
#  podman run -it balewski/ubu22-qiskit-qml:p1 bash


# on PM use 'podman-hpc' instead of 'podman' and all should work
# additionaly do 1 time: podman-hpc migrate balewski/ubu22-qiskit-qml:p1


# Set non-interactive mode for apt-get
ARG DEBIAN_FRONTEND=noninteractive
ENV TZ=America/Los_Angeles

# Update the OS and install required packages
RUN echo "1a-AAAAAAAAAAAAAAAAAAAAAAAAAAAAA OS update" && \
    apt-get update && \
    apt-get install -y locales autoconf automake gcc g++ make vim wget ssh openssh-server sudo git emacs aptitude build-essential xterm python3-pip python3-tk python3-scipy python3-dev iputils-ping net-tools screen feh hdf5-tools python3-bitstring plocate graphviz tzdata x11-apps python3-venv && \
    apt-get clean

# latex install takes a long time
#RUN echo "1b-AAAAAAAAAAAAAAAAAAAAAAAAAAAAA TeX Live " && \
#    apt-get install -y texlive-full texlive-latex-extra texlive-science texlive-fonts-recommended dvipng 

# Create a virtual environment for Python packages to avoid the externally managed environment issue
RUN python3 -m venv /opt/venv

# Activate the virtual environment
ENV PATH="/opt/venv/bin:$PATH"

# Install Qiskit 1.0 and its related packages within the virtual environment
RUN echo "2b-AAAAAAAAAAAAAAAAAAAAAAAAAAAAA Qiskit 1.0 libs" && \
    /opt/venv/bin/pip install -c https://qisk.it/1-0-constraints qiskit[visualization]==1.2.2 qiskit-ibm-runtime==0.29 qiskit-machine-learning qiskit_ibm_experiment qiskit-aer qiskit-ionq

# Install ML and QML libraries
RUN echo "2c-AAAAAAAAAAAAAAAAAAAAAAAAAAAAA ML+QML libs" && \
    /opt/venv/bin/pip install scikit-learn pandas seaborn[stats] networkx[default] optuna

# Install additional Python libraries
RUN echo "2d-AAAAAAAAAAAAAAAAAAAAAAAAAAAAA python libs" && \
    /opt/venv/bin/pip install --upgrade pip && \
    /opt/venv/bin/pip install matplotlib h5py scipy jupyter notebook bitstring lmfit pytest

# Install Pillow for matplotlib backend 'TkAgg'
RUN echo "2e-AAAAAAAAAAAAAAAAAAAAAAAAAAAAA python libs" && \
    /opt/venv/bin/pip install --upgrade Pillow

# Install PennyLane, PyTorch, and other quantum computing-related libraries
RUN echo "3a-AAAAAAAAAAAAAAAAAAAAAAAAAAAAA pennylane" && \
    /opt/venv/bin/pip install pennylane --upgrade && \
    /opt/venv/bin/pip install pennylane-lightning pennylane-lightning[gpu] pennylane-sf pennylane-qiskit pennylane-cirq && \
    /opt/venv/bin/pip install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cpu && \
    /opt/venv/bin/pip install torchsummary

# Install JAX and related optimization libraries
RUN echo "3b-AAAAAAAAAAAAAAAAAAAAAAAAAAAAA JAX" && \
    /opt/venv/bin/pip install -U "jax[cpu]" && \
    /opt/venv/bin/pip install jaxopt optax

# Install qbraid, Amazon Braket SDK, and other final libraries
RUN /opt/venv/bin/pip install qbraid amazon-braket-sdk mthree && \
    /opt/venv/bin/pip uninstall -y qiskit-ibm-provider  && \
    /opt/venv/bin/pip install stim

#RUN apt-get install -y  locales  # tmp

# Final cleanup
RUN apt-get clean

# Set the default command to bash
CMD ["/bin/bash"]

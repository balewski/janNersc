FROM ubuntu:20.04
# Goal:  install Music + PyCola3 under Python3
# use-case instruction is at the bottom

# time docker build -f Dockerfile.ubu20-music-pycola3 -t balewski/ubu20-music-pycola3:v1  .
# docker run -it balewski/ubu20-pycola3:v1   /bin/bash
#   
#         docker exec -it 07d15850b9c2 bash
#         docker login
#         docker ps -a
#         docker commit -m "ubuntu20 LTE+Pycola3" -a "Jan Balewski" a7xx balewski/xxx:d
#         docker push  balewski/ubu20-music-pycola3:v1
#   at NERSC Image was pulled w/ command:   shifterimg pull balewski/ubu20-music-pycola3:v1

# is needed by   one of libs 
ARG DEBIAN_FRONTEND=noninteractive
ENV TZ=America/Los_Angeles

RUN echo 1-AAAAAAAAAAAAAAAAAAAAAAAAAAAAA  OS update   && \
    apt-get update && \
    apt-get install -y  locales autoconf automake gcc g++ make vim wget  ssh git emacs aptitude build-essential xterm python3-pip   python3-tk python3-scipy python3-dev iputils-ping net-tools screen  && \
    apt-get clean all

RUN echo 1b-AAAAAAAAAAAAAAAAAAAAAAAAAAAAA libs for Music   && \
    apt-get update && \
    apt-get install -y cmake-curses-gui fftw3 fftw3-dev  libhdf5-dev hdf5-tools  libgsl-dev pkg-config

RUN echo 1c-AAAAAAAAAAAAAAAAAAAAAAAAAAAAA install Music   && \
    cd /usr/share  && \
    git clone https://bitbucket.org/ohahn/music.git  && \
    cd music  && \
    mkdir build  && \
    cd /usr/share/music/build  && \
    ls -l .. && \
    FFTW3_INCLUDE_DIR=/usr/lib/x86_64-linux-gnu/  && \
    HDF5_hdf5_LIBRARY=/usr/lib/x86_64-linux-gnu/  && \
    cmake ../ -DCMAKE_VARIABLE_NAME=ccg  && \
    make -j 

RUN echo 1d-AAAAAAAAAAAAAAAAAAAAAAAAAAAAA config Music   && \
    cd /usr/share/music  && \
    sed -i "s/#format\t\t\t= generic/format\t\t= generic/"   ics_example.conf && \
    sed -i "s/#filename\t\t= debug.hdf5/filename\t= universe1.hdf5/"   ics_example.conf 


# notes: python3-tk instals TK for matplotlib to display graphic on Cori

RUN echo 2a-AAAAAAAAAAAAAAAAAAAAAAAAAAAAA   python libs  && \
    pip3 install --upgrade pip && \
    pip3 install matplotlib h5py ruamel.yaml  scipy pycola3 

# re-install numpy is  trick from Peter N. to resolve: ValueError: numpy.ndarray size changed for PyCola
# Unit test: python3 -c 'import pycola3'

RUN    echo 2c-AAAAAAAAAAAAAAAAAAAAAAAAAAAAA   fix numpy+pycola  && \
    pip3 uninstall -y numpy
RUN   pip3 install  numpy

# manual change 1:  remove .value from /usr/local/lib/python3.8/dist-packages/pycola3/ic.py, line 240, 6x
# e.g.: ss["level_0" + level0 + "_DM_dz"].value[4:-4, 4:-4, 4:-4] * boxsize
# manual change 2:  add pycola3. to: /usr/local/lib/python3.8/dist-packages/pycola3/ic.py, line 734, 6x
# e.g: from acceleration import grad_phi --> from  pycola3.acceleration import grad_phi
RUN    echo 2d-AAAAAAAAAAA  fix  pycola code && \
    sed -i "s/.value//" /usr/local/lib/python3.8/dist-packages/pycola3/ic.py && \
    sed -i "s/from acceleration/from pycola3.acceleration/" /usr/local/lib/python3.8/dist-packages/pycola3/ic.py && \
        sed -i "s/from cic/from pycola3.cic/" /usr/local/lib/python3.8/dist-packages/pycola3/ic.py && \
	sed -i "s/from potential/from pycola3.potential/" /usr/local/lib/python3.8/dist-packages/pycola3/ic.py 

RUN  echo 2e-AAAAAAAAAAA  example use of pycola && \
       mkdir  /usr/share/use_pycola  
ADD  use_pycola/* /usr/share/use_pycola

RUN echo 2b-AAAAAAAAAAAAAAAAAAAAAAAAAAAAA   python libs  && \
    pip3 install  --upgrade Pillow
    
# notes: Pillow is needed by matplotlib backend 'TkAgg' 


RUN echo 4-AAAAAAAAAAAAAAAAAAAAAAAAAAAAA add balewski as @ NERSC  && \
    groupadd --gid 1031480 balewski   && \
    adduser --uid 31480 --gid 1031480 --disabled-password  --gecos ""   balewski


ADD docker-entrypoint.sh /srv/docker-entrypoint.sh
RUN  echo 4-AAAAAAAAAA ENTRYPOINT  && chmod a+x /srv/docker-entrypoint.sh
ENTRYPOINT ["/srv/docker-entrypoint.sh"]


# User instruction
# su -  balewski (or any other user)
# mkdir work; cd work
# cp  /usr/share/music/ics_example.conf . ; /usr/share/music/build/MUSIC ics_example.conf # RUN MUSIC
# cp -rp /usr/share/use_pycola/* . ; python3 ./pycola3_OmSiNs.py .  cosmoMeta.yaml        # RUN PYCOLA
# ls -lh universe1.*                                                                      # list outputs

